>A PARTIR DE LA QUESTION [4]:

select NOM_ACTEUR 
  from ACTEUR
   where DATE_DE_NAISSANCE < DATE '1999-31-12' and DATE_DE_NAISSANCE > DATE '01-OCT-1950';
------------------------------------------------------
ANNEE-MOIS-JOUR : format.
------------------------------------------------------
 select NOM_DU_ROLE
    from ROLE
     where NUMERO_ACTEUR = 7
     	   order by NOM_DU_ROLE asc;
-------------------------
 et desc pour l'ordre decroissant.
-------------------------

select NOM_REALISATEUR, PRENOM_REALISATEUR
from REALISATEUR inner join FILM 
on REALISATEUR.NUMERO_REALISATEUR = FILM.NUMERO_REALISATEUR 
inner join ROLE
on ROLE.NUMERO_FILM=FILM.NUMERO_FILM
where ROLE.NUMERO_ACTEUR = 7;

------------------------------------------------
from A inner join B 
on A.c=B.c
inner join D
on D.e=B.e
where [cdt]
<=>syntaxe de la triple jointure(jointure simple).
-------------------------------------------------

select NOM_REALISATEUR, PRENOM_REALISATEUR
from REALISATEUR inner join FILM
on REALISATEUR.NUMERO_REALISATEUR = FILM.NUMERO_REALISATEUR
inner join ROLE
on ROLE.NUMERO_FILM=FILM.NUMERO_FILM
inner join ACTEUR
on ACTEUR.NUMERO_ACTEUR=ROLE.NUMERO_ACTEUR
where NOM_ACTEUR='POIRET'
order by NOM_ACTEUR asc;

-------------------------------------------------
Quadruple jointure pour lier toutes les tables du modele conceptuel 
(sans cardinalitées).
-------------------------------------------------

select NOM_REALISATEUR, PRENOM_REALISATEUR
from ACTEUR inner join ROLE
on ACTEUR.NUMERO_ACTEUR = ROLE.NUMERO_ACTEUR
inner join FILM
on ROLE.NUMERO_FILM=FILM.NUMERO_FILM
inner join REALISATEUR
on REALISATEUR.NUMERO_REALISATEUR=FILM.NUMERO_REALISATEUR 
where NOM_ACTEUR = 'POIRET'
order by NOM_ACTEUR asc; 

--------------------------------------------------------------
selection sur la premiere jointure plus SIMPLE.(pas de parenthèses)
--------------------------------------------------------------

select ACTEUR.*
from ACTEUR inner join ROLE
on ACTEUR.NUMERO_ACTEUR = ROLE.NUMERO_ACTEUR
inner join FILM
on ROLE.NUMERO_FILM=FILM.NUMERO_FILM
inner join REALISATEUR
on REALISATEUR.NUMERO_REALISATEUR=FILM.NUMERO_REALISATEUR 
where REALISATEUR.NUMERO_REALISATEUR = 7;

-----------------------------------------------------------
condition sur la dernière jointure (comme on a dit hier)
+select ACTEUR.* pour selectionner les champs acteurs.
-----------------------------------------------------------

select NUMERO_ACTEUR,NOM_ACTEUR
from ACTEUR 
where NATION_ACTEUR is not null ;

------------------------------
is not null en oracle.
------------------------------

select distinct REALISATEUR.NOM_REALISATEUR
from REALISATEUR natural join  FILM
where FILM.NUMERO_FILM is not null ; 

------------------------------
on checke le fichier base.sql 
------------------------------

select count(*)
from REALISATEUR

===========================================

select NOM_ACTEUR, count(NUMERO_FILM)
from ACTEUR natural join ROLE
group by NOM_ACTEUR;

===========================================

select NOM_ACTEUR, max(DUREE), min(DUREE),avg(DUREE),max(DUREE)-min(DUREE) as ECART
from ACTEUR inner join ROLE 
on ACTEUR.NUMERO_ACTEUR=ROLE.NUMERO_ACTEUR
inner join FILM
on FILM.NUMERO_FILM=ROLE.NUMERO_FILM
group by NOM_ACTEUR;

===========================================

select NOM_REALISATEUR, count(*) as NOMBRE_FILMS
from REALISATEUR natural join FILM
group by NOM_REALISATEUR
having count(*) = 2 ;
-------------------------------------------------------
on enleve role seulement film et realisateur est suffisant 
car numero_film est dans films table et on veut calculer le nombre 
de films par utilisateur.

===========================================
select NUMERO_ACTEUR
from(
select NUMERO_ACTEUR,count(DUREE)
from ACTEUR natural join ROLE
natural join FILM
where NATION_ACTEUR='FRANCAISE'
group by NUMERO_ACTEUR
having count(DUREE)<=600);

where: apres la jointure toujours.
group by tout a la fin suivi de having ..

















